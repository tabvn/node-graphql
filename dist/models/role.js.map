{"version":3,"sources":["../../src/models/role.js"],"names":["Role","app","model","Promise","resolve","reject","then","name","get","includes","catch","err","id","ctx","models","user_role","find","roleId","results","each","result","delete","_id","type","required","unique","lowercase","created","defaultValue","Date","updated"],"mappings":";;;;;;;;;;AAAA;;AAKA;;;;AACA;;;;AACA;;;;;;;;;;;;IAEqBA,I;;;AAEjB,kBAAYC,GAAZ,EAAiB;AAAA;;AAAA,2GACPA,GADO,EACF,MADE;AAEhB;;AAED;;;;;;;;;qCAKaC,K,EAAO;AAAA;;AAGhB,mBAAO,IAAIC,OAAJ,CAAY,UAACC,OAAD,EAAUC,MAAV,EAAqB;;AAEpC,6HAAmBH,KAAnB,EAA0BI,IAA1B,CAA+B,UAACJ,KAAD,EAAW;;AAEtC,wBAAMK,OAAO,iBAAEC,GAAF,CAAMN,KAAN,EAAa,MAAb,CAAb;AACA,wBAAI,iBAAEO,QAAF,CAAW,CAAC,UAAD,EAAa,eAAb,EAA8B,OAA9B,CAAX,EAAmDF,IAAnD,CAAJ,EAA8D;AAC1D,+BAAOF,iBAAeE,IAAf,qBAAP;AACH;AACD,2BAAOH,QAAQF,KAAR,CAAP;AAEH,iBARD,EAQGQ,KARH,CAQS,UAACC,GAAD,EAAS;AACd,2BAAON,OAAOM,GAAP,CAAP;AACH,iBAVD;AAWH,aAbM,CAAP;AAcH;;AAED;;;;;;;;oCAKYC,E,EAAI;AAAA;;AAEZ,mBAAO,IAAIT,OAAJ,CAAY,UAACC,OAAD,EAAUC,MAAV,EAAqB;;AAEpC,4HAAkBO,EAAlB,EAAsBN,IAAtB,CAA2B,UAACM,EAAD,EAAQ;;AAE/B,2BAAKC,GAAL,CAASC,MAAT,CAAgBC,SAAhB,CAA0BC,IAA1B,CAA+B,EAACC,QAAQL,EAAT,EAA/B,EAA6CN,IAA7C,CAAkD,UAACY,OAAD,EAAa;AAC3D,yCAAEC,IAAF,CAAOD,OAAP,EAAgB,UAACE,MAAD,EAAY;AACxB,mCAAKP,GAAL,CAASC,MAAT,CAAgBC,SAAhB,CAA0BM,MAA1B,CAAiC,iBAAEb,GAAF,CAAMY,MAAN,EAAc,KAAd,CAAjC,EAAuDd,IAAvD,CAA4D,YAAM,CAEjE,CAFD;AAGH,yBAJD;;AAMA,+BAAOF,QAAQQ,EAAR,CAAP;AAEH,qBATD,EASGF,KATH,CASS,UAACC,GAAD,EAAS;AACd,+BAAON,OAAOM,GAAP,CAAP;AACH,qBAXD;AAaH,iBAfD,EAeGD,KAfH,CAeS,UAACC,GAAD,EAAS;AACd,2BAAON,OAAOM,GAAP,CAAP;AACH,iBAjBD;AAkBH,aApBM,CAAP;AAqBH;;AAED;;;;;;;iCAIS;AACL,mBAAO;AACHW,qBAAK,EAACC,wBAAD,EADF;AAEHhB,sBAAM;AACFgB,0BAAM,oDADJ;AAEFC,8BAAU,IAFR;AAGFC,4BAAQ,IAHN;AAIFC,+BAAW;AAJT,iBAFH;AAQHC,yBAAS;AACLJ,4CADK;AAELK,kCAAc,IAAIC,IAAJ;AAFT,iBARN;AAYHC,yBAAS;AACLP,4CADK;AAELK,kCAAc,IAAIC,IAAJ;AAFT;AAZN,aAAP;AAiBH;;;;;;kBAlFgB7B,I","file":"role.js","sourcesContent":["import {\n    GraphQLID,\n    GraphQLNonNull,\n    GraphQLString,\n} from 'graphql';\nimport Model from './model'\nimport DateTime from '../types/datetime'\nimport _ from 'lodash'\n\nexport default class Role extends Model {\n\n    constructor(app) {\n        super(app, 'role');\n    }\n\n    /**\n     * Implement before create\n     * @param model\n     * @returns {Promise<any>}\n     */\n    beforeCreate(model) {\n\n\n        return new Promise((resolve, reject) => {\n\n            super.beforeCreate(model).then((model) => {\n\n                const name = _.get(model, 'name');\n                if (_.includes(['everyone', 'authenticated', 'owner'], name)) {\n                    return reject(`Role ${name} already exist.`)\n                }\n                return resolve(model);\n\n            }).catch((err) => {\n                return reject(err);\n            })\n        })\n    }\n\n    /**\n     * Override After delete model\n     * @param model\n     * @returns {Promise<any>}\n     */\n    afterDelete(id) {\n\n        return new Promise((resolve, reject) => {\n\n            super.afterDelete(id).then((id) => {\n\n                this.ctx.models.user_role.find({roleId: id}).then((results) => {\n                    _.each(results, (result) => {\n                        this.ctx.models.user_role.delete(_.get(result, '_id')).then(() => {\n\n                        });\n                    });\n\n                    return resolve(id);\n\n                }).catch((err) => {\n                    return reject(err);\n                })\n\n            }).catch((err) => {\n                return reject(err);\n            })\n        })\n    }\n\n    /**\n     *\n     * @returns {{_id: {type}, name: {type, required: boolean}, created: {type, defaultValue: Date}, updated: {type, defaultValue: Date}}}\n     */\n    fields() {\n        return {\n            _id: {type: GraphQLID},\n            name: {\n                type: GraphQLNonNull(GraphQLString),\n                required: true,\n                unique: true,\n                lowercase: true,\n            },\n            created: {\n                type: DateTime,\n                defaultValue: new Date(),\n            },\n            updated: {\n                type: DateTime,\n                defaultValue: new Date(),\n            }\n        }\n    }\n\n}"]}