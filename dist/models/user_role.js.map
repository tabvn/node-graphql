{"version":3,"sources":["../../src/models/user_role.js"],"names":["UserRole","app","model","Promise","resolve","reject","then","query","$and","userId","get","roleId","findOne","result","ctx","models","user","userRoles","remove","toString","catch","err","id","_id","type","required","objectId","created","defaultValue","Date"],"mappings":";;;;;;;;;;AAAA;;AAKA;;;;AACA;;;;AACA;;;;;;;;;;;;IAEqBA,Q;;;AAEjB,sBAAYC,GAAZ,EAAiB;AAAA;;AAAA,mHACPA,GADO,EACF,WADE;AAEhB;;AAGD;;;;;;;;qCAIaC,K,EAAO;AAAA;;AAGhB,mBAAO,IAAIC,OAAJ,CAAY,UAACC,OAAD,EAAUC,MAAV,EAAqB;;AAGpC,qIAAmBH,KAAnB,EAA0BI,IAA1B,CAA+B,UAACJ,KAAD,EAAW;;AAEtC,wBAAMK,QAAQ;AACVC,8BAAM,CACF,EAACC,QAAQ,iBAAEC,GAAF,CAAMR,KAAN,EAAa,QAAb,CAAT,EADE,EAEF,EAACS,QAAQ,iBAAED,GAAF,CAAMR,KAAN,EAAa,QAAb,CAAT,EAFE;AADI,qBAAd;;AAOA,2BAAKU,OAAL,CAAaL,KAAb,EAAoB,IAApB,EAA0BD,IAA1B,CAA+B,kBAAU;AACrC,4BAAIO,MAAJ,EAAY;AACR,mCAAOR,OAAO,oBAAP,CAAP;AACH;;AAED,+BAAKS,GAAL,CAASC,MAAT,CAAgBC,IAAhB,CAAqBC,SAArB,CAA+BC,MAA/B,CAAsC,iBAAEC,QAAF,CAAW,iBAAET,GAAF,CAAMR,KAAN,EAAa,QAAb,CAAX,CAAtC;;AAEA,+BAAOE,QAAQF,KAAR,CAAP;AAEH,qBATD,EASGkB,KATH,CASS,UAACC,GAAD,EAAS;;AAEd,+BAAOhB,OAAOgB,GAAP,CAAP;AACH,qBAZD;AAcH,iBAvBD,EAuBGD,KAvBH,CAuBS,UAACC,GAAD,EAAS;AACd,2BAAOhB,OAAOgB,GAAP,CAAP;AAEH,iBA1BD;AA6BH,aAhCM,CAAP;AAiCH;;AAED;;;;;;;;oCAKYC,E,EAAI;AAAA;;AAEZ,mBAAO,IAAInB,OAAJ,CAAY,UAACC,OAAD,EAAUC,MAAV,EAAqB;;AAEpC,oIAAkBiB,EAAlB,EAAsBhB,IAAtB,CAA2B,cAAM;AAC7B,2BAAKQ,GAAL,CAASC,MAAT,CAAgBC,IAAhB,CAAqBC,SAArB,CAA+BC,MAA/B,CAAsC,iBAAEC,QAAF,CAAWG,EAAX,CAAtC;AACH,iBAFD,EAEGF,KAFH,CAES,UAACC,GAAD;AAAA,2BAAShB,OAAOgB,GAAP,CAAT;AAAA,iBAFT;AAGH,aALM,CAAP;AAMH;;AAED;;;;;;;iCAIS;AACL,mBAAO;AACHE,qBAAK,EAACC,wBAAD,EADF;AAEHf,wBAAQ;AACJe,0BAAM,oDADF;AAEJC,8BAAU,IAFN;AAGJC,8BAAU;AAHN,iBAFL;AAOHf,wBAAQ;AACJa,0BAAM,oDADF;AAEJC,8BAAU,IAFN;AAGJC,8BAAU;AAHN,iBAPL;AAYHC,yBAAS;AACLH,4CADK;AAELI,kCAAc,IAAIC,IAAJ;AAFT;AAZN,aAAP;AAiBH;;;;;;kBAtFgB7B,Q","file":"user_role.js","sourcesContent":["import {\n    GraphQLID,\n    GraphQLNonNull,\n    GraphQLString,\n} from 'graphql';\nimport Model from './model'\nimport DateTime from '../types/datetime'\nimport _ from 'lodash'\n\nexport default class UserRole extends Model {\n\n    constructor(app) {\n        super(app, 'user_role');\n    }\n\n\n    /**\n     * Implement before create\n     * @param model\n     */\n    beforeCreate(model) {\n\n\n        return new Promise((resolve, reject) => {\n\n\n            super.beforeCreate(model).then((model) => {\n\n                const query = {\n                    $and: [\n                        {userId: _.get(model, 'userId')},\n                        {roleId: _.get(model, 'roleId')}\n                    ]\n                };\n\n                this.findOne(query, null).then(result => {\n                    if (result) {\n                        return reject('Role already exist')\n                    }\n\n                    this.ctx.models.user.userRoles.remove(_.toString(_.get(model, 'userId')));\n\n                    return resolve(model);\n\n                }).catch((err) => {\n\n                    return reject(err);\n                });\n\n            }).catch((err) => {\n                return reject(err);\n\n            });\n\n\n        });\n    }\n\n    /**\n     * Implement after delete model\n     * @param id\n     * @returns {Promise<any>}\n     */\n    afterDelete(id) {\n\n        return new Promise((resolve, reject) => {\n\n            super.afterDelete(id).then(id => {\n                this.ctx.models.user.userRoles.remove(_.toString(id));\n            }).catch((err) => reject(err));\n        })\n    }\n\n    /**\n     *\n     * @returns {{_id: {type}, name: {type, required: boolean}, created: {type, defaultValue: Date}, updated: {type, defaultValue: Date}}}\n     */\n    fields() {\n        return {\n            _id: {type: GraphQLID},\n            userId: {\n                type: GraphQLNonNull(GraphQLString),\n                required: true,\n                objectId: true,\n            },\n            roleId: {\n                type: GraphQLNonNull(GraphQLString),\n                required: true,\n                objectId: true,\n            },\n            created: {\n                type: DateTime,\n                defaultValue: new Date(),\n            }\n        }\n    }\n\n}"]}