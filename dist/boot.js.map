{"version":3,"sources":["../src/boot.js"],"names":["ctx","role","models","user","findOne","name","then","model","create","roleModel","email","userModel","collection","insertOne","err","info","console","log","user_role","userId","_id","roleId","cacheSet","get","catch"],"mappings":";;;;;;AAAA;;AACA;;;;;;kBAEe,UAACA,GAAD,EAAS;;AAEpB,QAAMC,OAAOD,IAAIE,MAAJ,CAAWD,IAAxB;AACA,QAAME,OAAOH,IAAIE,MAAJ,CAAWC,IAAxB;;AAGA;AACAF,SAAKG,OAAL,CAAa,EAACC,MAAM,eAAP,EAAb,EAAsCC,IAAtC,CAA2C,UAACC,KAAD,EAAW;;AAGlD,YAAIA,UAAU,IAAd,EAAoB;AAChB;AACAN,iBAAKO,MAAL,CAAY,EAACH,MAAM,eAAP,EAAZ,EAAqCC,IAArC,CAA0C,UAACG,SAAD,EAAe;;AAErDN,qBAAKC,OAAL,CAAa,EAACM,OAAO,gBAAR,EAAb,EAAwC,IAAxC,EAA8CJ,IAA9C,CAAmD,qBAAa;AAC5D,wBAAIK,cAAc,IAAlB,EAAwB;AACpB;AACAR,6BAAKS,UAAL,CAAgBC,SAAhB,mBAAoC,UAACC,GAAD,EAAMC,IAAN,EAAe;;AAE/C,gCAAID,GAAJ,EAAS;AACLE,wCAAQC,GAAR,CAAYH,GAAZ;AACH,6BAFD,MAEO;AACHd,oCAAIE,MAAJ,CAAWgB,SAAX,CAAqBV,MAArB,CAA4B;AACxBW,4CAAQ,iBAASC,GADO;AAExBC,4CAAQZ,UAAUW;AAFM,iCAA5B,EAGGd,IAHH,CAGQ,YAAM;AACVH,yCAAKmB,QAAL,CAAc,iBAAEC,GAAF,CAAM,iBAASH,GAAf,CAAd;AACH,iCALD;AAQH;AAEJ,yBAfD;AAgBH;AACJ,iBApBD,EAoBGI,KApBH,CAoBS,UAACV,GAAD,EAAS;AACdE,4BAAQC,GAAR,CAAY,8BAAZ,EAA4CH,GAA5C;AACH,iBAtBD;AAwBH,aA1BD,EA0BGU,KA1BH,CA0BS,UAACV,GAAD,EAAS;AACdE,wBAAQC,GAAR,CAAY,8BAAZ,EAA4CH,GAA5C;AACH,aA5BD;AA8BH;AACJ,KApCD;AAuCH,C","file":"boot.js","sourcesContent":["import {rootUser} from \"./config\";\nimport _ from 'lodash'\n\nexport default (ctx) => {\n\n    const role = ctx.models.role;\n    const user = ctx.models.user;\n\n\n    // create default role\n    role.findOne({name: 'administrator'}).then((model) => {\n\n\n        if (model === null) {\n            // create default administrator role\n            role.create({name: 'administrator'}).then((roleModel) => {\n\n                user.findOne({email: 'admin@livex.tv'}, null).then(userModel => {\n                    if (userModel === null) {\n                        // let create default user\n                        user.collection.insertOne(rootUser, (err, info) => {\n\n                            if (err) {\n                                console.log(err);\n                            } else {\n                                ctx.models.user_role.create({\n                                    userId: rootUser._id,\n                                    roleId: roleModel._id,\n                                }).then(() => {\n                                    user.cacheSet(_.get(rootUser._id), rootUser);\n                                });\n\n\n                            }\n\n                        });\n                    }\n                }).catch((err) => {\n                    console.log(\"An error create default user\", err);\n                });\n\n            }).catch((err) => {\n                console.log(\"An error create default role\", err);\n            });\n\n        }\n    });\n\n\n}"]}